{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GroupsContext = /*#__PURE__*/createContext();\nexport const groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE_GROUP':\n      return {\n        groups: [...state.groups, action.payload]\n      };\n    case 'SET_GROUPS':\n      return {\n        groups: action.payload\n      };\n    case 'DELETE_GROUP':\n      return {\n        groups: state.groups.filter(group => group._id !== action.payload)\n      };\n    case 'ADD_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: [...group.items, action.payload.item]\n            };\n          }\n          return group;\n        })\n      };\n    case 'REMOVE_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item._id !== action.payload.itemId)\n            };\n          }\n          return group;\n        })\n      };\n    case 'ADD_GROUP_MEMBER':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              members: [...group.members, action.payload.user]\n            };\n          }\n          return group;\n        })\n      };\n    case 'REMOVE_GROUP_MEMBER':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              members: group.members.filter(member => member._id !== action.payload.userId)\n            };\n          }\n          return group;\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport const GroupsContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(groupsReducer, {\n    groups: []\n  });\n  return /*#__PURE__*/_jsxDEV(GroupsContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupsContextProvider, \"xZcTVOXHBzaLZCBzkTdgA68wblo=\");\n_c = GroupsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GroupsContextProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","GroupsContext","groupsReducer","state","action","type","groups","payload","filter","group","_id","map","groupId","items","item","itemId","members","user","member","userId","GroupsContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\n\nexport const GroupsContext = createContext();\n\nexport const groupsReducer = (state, action) => {\n    switch(action.type){\n        case 'CREATE_GROUP':\n            return { \n                groups: [...state.groups, action.payload]\n            }\n        case 'SET_GROUPS':\n            return {\n                groups: action.payload\n            }\n        case 'DELETE_GROUP':\n            return {\n                groups: state.groups.filter(group => group._id !== action.payload)\n            }\n        case 'ADD_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: [...group.items, action.payload.item]\n                        };\n                    }\n                    return group;\n                })\n            }\n        case 'REMOVE_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: group.items.filter(item => item._id !== action.payload.itemId)\n                        };\n                    }\n                    return group;\n                })\n            };\n        case 'ADD_GROUP_MEMBER':\n            return {\n              groups: state.groups.map(group => {\n                if (group._id === action.payload.groupId) {\n                  return {\n                    ...group,\n                    members: [...group.members, action.payload.user]\n                  };\n                }\n                return group;\n              })\n            };\n        case 'REMOVE_GROUP_MEMBER':\n            return {\n              groups: state.groups.map(group => {\n                if (group._id === action.payload.groupId) {\n                  return {\n                    ...group,\n                    members: group.members.filter(member => member._id !== action.payload.userId),\n                  };                    }\n                    return group;\n                  }),\n                };\n        default:\n            return state;\n    }\n}\n\n\nexport const GroupsContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(groupsReducer, {\n        groups: []\n    });\n\n    return (\n        <GroupsContext.Provider value={{ ...state, dispatch }}>\n            {children}\n        </GroupsContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}