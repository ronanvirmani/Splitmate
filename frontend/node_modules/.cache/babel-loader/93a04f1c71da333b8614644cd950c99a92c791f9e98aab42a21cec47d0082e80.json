{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useFetchGroupItems = () => {\n  _s();\n  const [members, setMembers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  const fetchGroupItems = useCallback(async groupId => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch group items');\n      }\n      setMembers(data.members);\n      setItems(data.items);\n\n      // Calculate total price\n      const totalPrice = data.items.reduce((sum, item) => sum + item.price, 0);\n      setTotal(totalPrice);\n    } catch (err) {\n      console.error('Error fetching group items:', err.message || err);\n    }\n  }, []);\n  const updateTotalAmount = useCallback(() => {\n    // Calculate total price\n    const totalPrice = items.reduce((sum, item) => sum + item.price, 0);\n    setTotal(totalPrice);\n  }, [items]);\n  const addMember = useCallback(newMember => {\n    setMembers(prevMembers => [...prevMembers, newMember]);\n    // Update total amount when a new member is added\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n  const deleteMember = useCallback(memberId => {\n    setMembers(prevMembers => prevMembers.filter(member => member.id !== memberId));\n    // Update total amount when a member is deleted\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n  const addItem = useCallback(newItem => {\n    setItems(prevItems => [...prevItems, newItem]);\n    // Update total amount when a new item is added\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n  const deleteItem = useCallback(itemId => {\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n    // Update total amount when an item is deleted\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n  return {\n    members,\n    items,\n    total,\n    fetchGroupItems,\n    addMember,\n    deleteMember,\n    addItem,\n    deleteItem\n  };\n};\n_s(useFetchGroupItems, \"UregACfANKQsejCzpjrCKcrMTCE=\");\nexport default useFetchGroupItems;","map":{"version":3,"names":["useState","useCallback","useFetchGroupItems","_s","members","setMembers","items","setItems","total","setTotal","fetchGroupItems","groupId","response","fetch","data","json","ok","Error","message","totalPrice","reduce","sum","item","price","err","console","error","updateTotalAmount","addMember","newMember","prevMembers","deleteMember","memberId","filter","member","id","addItem","newItem","prevItems","deleteItem","itemId"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchGroupItems.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nconst useFetchGroupItems = () => {\n  const [members, setMembers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const fetchGroupItems = useCallback(async (groupId) => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}`);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch group items');\n      }\n\n      setMembers(data.members);\n      setItems(data.items);\n\n      // Calculate total price\n      const totalPrice = data.items.reduce((sum, item) => sum + item.price, 0);\n      setTotal(totalPrice);\n\n    } catch (err) {\n      console.error('Error fetching group items:', err.message || err);\n    }\n  }, []);\n\n  const updateTotalAmount = useCallback(() => {\n    // Calculate total price\n    const totalPrice = items.reduce((sum, item) => sum + item.price, 0);\n    setTotal(totalPrice);\n  }, [items]);\n\n  const addMember = useCallback((newMember) => {\n    setMembers((prevMembers) => [...prevMembers, newMember]);\n    // Update total amount when a new member is added\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n\n  const deleteMember = useCallback((memberId) => {\n    setMembers((prevMembers) => prevMembers.filter(member => member.id !== memberId));\n    // Update total amount when a member is deleted\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n\n  const addItem = useCallback((newItem) => {\n    setItems((prevItems) => [...prevItems, newItem]);\n    // Update total amount when a new item is added\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n\n  const deleteItem = useCallback((itemId) => {\n    setItems((prevItems) => prevItems.filter(item => item.id !== itemId));\n    // Update total amount when an item is deleted\n    updateTotalAmount();\n  }, [updateTotalAmount]);\n\n  return { members, items, total, fetchGroupItems, addMember, deleteMember, addItem, deleteItem };\n};\n\nexport default useFetchGroupItems;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}