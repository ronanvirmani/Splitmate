{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nconst useFetchGroupItems = () => {\n  _s();\n  const [members, setMembers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  const fetchGroupItems = useCallback(async groupId => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}`);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch group items');\n      }\n      setMembers(data.members);\n      setItems(data.items);\n\n      // Calculate total price\n      const totalPrice = data.items.reduce((sum, item) => sum + item.price, 0);\n      console.log('Total Price:', totalPrice);\n      setTotal(totalPrice);\n    } catch (err) {\n      console.error('Error fetching group items:', err.message || err);\n    }\n  }, []);\n  useEffect(() => {\n    console.log('Members:', members);\n    console.log('Total:', total);\n  }, [members, total]);\n  return {\n    members,\n    items,\n    total,\n    fetchGroupItems\n  };\n};\n_s(useFetchGroupItems, \"0e7ckSLZaZJic8EwHLJ1dHJU1BE=\");","map":{"version":3,"names":["useState","useCallback","useEffect","useFetchGroupItems","_s","members","setMembers","items","setItems","total","setTotal","fetchGroupItems","groupId","response","fetch","data","json","ok","Error","message","totalPrice","reduce","sum","item","price","console","log","err","error"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchGroupItems.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nconst useFetchGroupItems = () => {\n  const [members, setMembers] = useState([]);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const fetchGroupItems = useCallback(async (groupId) => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}`);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to fetch group items');\n      }\n\n      setMembers(data.members);\n      setItems(data.items);\n\n      // Calculate total price\n      const totalPrice = data.items.reduce((sum, item) => sum + item.price, 0);\n      console.log('Total Price:', totalPrice);\n      setTotal(totalPrice);\n    } catch (err) {\n      console.error('Error fetching group items:', err.message || err);\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('Members:', members);\n    console.log('Total:', total);\n  }, [members, total]);\n\n  return { members, items, total, fetchGroupItems };\n};\n\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAExD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,eAAe,GAAGV,WAAW,CAAC,MAAOW,OAAO,IAAK;IACrD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcF,OAAQ,EAAC,CAAC;MACtD,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;MAChE;MAEAb,UAAU,CAACS,IAAI,CAACV,OAAO,CAAC;MACxBG,QAAQ,CAACO,IAAI,CAACR,KAAK,CAAC;;MAEpB;MACA,MAAMa,UAAU,GAAGL,IAAI,CAACR,KAAK,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,EAAE,CAAC,CAAC;MACxEC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEN,UAAU,CAAC;MACvCV,QAAQ,CAACU,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAACR,OAAO,IAAIQ,GAAG,CAAC;IAClE;EACF,CAAC,EAAE,EAAE,CAAC;EAENzB,SAAS,CAAC,MAAM;IACduB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAErB,OAAO,CAAC;IAChCoB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEjB,KAAK,CAAC;EAC9B,CAAC,EAAE,CAACJ,OAAO,EAAEI,KAAK,CAAC,CAAC;EAEpB,OAAO;IAAEJ,OAAO;IAAEE,KAAK;IAAEE,KAAK;IAAEE;EAAgB,CAAC;AACnD,CAAC;AAACP,EAAA,CAhCID,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}