{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useGroupsContext } from './useGroupContext';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst useAddItemToGroup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const {\n    dispatch\n  } = useGroupsContext();\n  console.log(A);\n  const addItemToGroup = async (groupId, name, price) => {\n    try {\n      const parsedPrice = parseFloat(price);\n      const response = await fetch(`${API_URL}/api/groups/${groupId}/addItem`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          price: parsedPrice\n        })\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'ADD_GROUP_ITEM',\n          payload: {\n            groupId,\n            item: json\n          }\n        });\n        setError(null);\n        return json;\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error adding item to group:', err);\n      setError('An error occurred while adding the item to the group.');\n    }\n  };\n  return {\n    addItemToGroup,\n    error\n  };\n};\n_s(useAddItemToGroup, \"i++mFDUT9vjLVUwyW13B3tuEbfw=\", false, function () {\n  return [useGroupsContext];\n});\nexport default useAddItemToGroup;","map":{"version":3,"names":["useState","useGroupsContext","API_URL","process","env","REACT_APP_API_URL","useAddItemToGroup","_s","error","setError","dispatch","console","log","A","addItemToGroup","groupId","name","price","parsedPrice","parseFloat","response","fetch","method","headers","body","JSON","stringify","json","ok","type","payload","item","message","err"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useAddItemToGroup.js"],"sourcesContent":["import { useState } from 'react';\nimport { useGroupsContext } from './useGroupContext';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst useAddItemToGroup = () => {\n  const [error, setError] = useState(null);\n  const { dispatch } = useGroupsContext();\n\n  console.log(A)\n\n  const addItemToGroup = async (groupId, name, price) => {\n    try {\n      const parsedPrice = parseFloat(price);\n\n      const response = await fetch(`${API_URL}/api/groups/${groupId}/addItem`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ name, price: parsedPrice })\n      });\n\n      const json = await response.json();\n\n      if (response.ok) {\n        dispatch({ type: 'ADD_GROUP_ITEM', payload: { groupId, item: json } });\n        setError(null);\n        return json;\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error adding item to group:', err);\n      setError('An error occurred while adding the item to the group.');\n    }\n  };\n\n  return { addItemToGroup, error };\n};\n\nexport default useAddItemToGroup;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,mBAAmB;AAEpD,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAE7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEU;EAAS,CAAC,GAAGT,gBAAgB,CAAC,CAAC;EAEvCU,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;EAEd,MAAMC,cAAc,GAAG,MAAAA,CAAOC,OAAO,EAAEC,IAAI,EAAEC,KAAK,KAAK;IACrD,IAAI;MACF,MAAMC,WAAW,GAAGC,UAAU,CAACF,KAAK,CAAC;MAErC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEnB,OAAQ,eAAca,OAAQ,UAAS,EAAE;QACvEO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,IAAI;UAAEC,KAAK,EAAEC;QAAY,CAAC;MACnD,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACflB,QAAQ,CAAC;UAAEmB,IAAI,EAAE,gBAAgB;UAAEC,OAAO,EAAE;YAAEf,OAAO;YAAEgB,IAAI,EAAEJ;UAAK;QAAE,CAAC,CAAC;QACtElB,QAAQ,CAAC,IAAI,CAAC;QACd,OAAOkB,IAAI;MACb,CAAC,MAAM;QACLlB,QAAQ,CAACkB,IAAI,CAACK,OAAO,CAAC;MACxB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZtB,OAAO,CAACH,KAAK,CAAC,6BAA6B,EAAEyB,GAAG,CAAC;MACjDxB,QAAQ,CAAC,uDAAuD,CAAC;IACnE;EACF,CAAC;EAED,OAAO;IAAEK,cAAc;IAAEN;EAAM,CAAC;AAClC,CAAC;AAACD,EAAA,CAlCID,iBAAiB;EAAA,QAEAL,gBAAgB;AAAA;AAkCvC,eAAeK,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}