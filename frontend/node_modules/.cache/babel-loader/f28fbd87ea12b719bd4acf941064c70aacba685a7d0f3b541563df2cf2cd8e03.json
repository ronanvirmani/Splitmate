{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGroupsContext } from './useGroupContext';\nconst API_URL = process.env.REACT_APP_API_URL;\nconst useAddUserToGroup = () => {\n  _s();\n  const {\n    dispatch\n  } = useGroupsContext();\n  const addUsersToGroup = async (groupId, userEmail) => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}/addUser`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userEmail\n        })\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        throw new Error(json.message || 'Failed to add user to group');\n      }\n      dispatch({\n        type: 'ADD_GROUP_MEMBER',\n        payload: {\n          groupId,\n          user: json\n        }\n      });\n      return json;\n    } catch (err) {\n      console.error('Error adding user to group:', err.message || err);\n      throw new Error('An error occurred while adding the user to the group.');\n    }\n  };\n  return {\n    addUsersToGroup\n  };\n};\n_s(useAddUserToGroup, \"IlspP3K+c2WgzlcPplCB8sQXJrc=\", false, function () {\n  return [useGroupsContext];\n});\nexport default useAddUserToGroup;","map":{"version":3,"names":["useGroupsContext","API_URL","process","env","REACT_APP_API_URL","useAddUserToGroup","_s","dispatch","addUsersToGroup","groupId","userEmail","response","fetch","method","headers","body","JSON","stringify","json","ok","Error","message","type","payload","user","err","console","error"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useAddUserToGroup.js"],"sourcesContent":["import { useGroupsContext } from './useGroupContext';\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nconst useAddUserToGroup = () => {\n  const { dispatch } = useGroupsContext();\n\n  const addUsersToGroup = async (groupId, userEmail) => {\n    try {\n      const response = await fetch(`/api/groups/${groupId}/addUser`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userEmail })\n      });\n\n      const json = await response.json();\n\n      if (!response.ok) {\n        throw new Error(json.message || 'Failed to add user to group');\n      }\n\n      dispatch({ type: 'ADD_GROUP_MEMBER', payload: { groupId, user: json } });\n      return json;\n    } catch (err) {\n      console.error('Error adding user to group:', err.message || err);\n      throw new Error('An error occurred while adding the user to the group.');\n    }\n  };\n\n  return { addUsersToGroup };\n};\n\nexport default useAddUserToGroup;\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,mBAAmB;AAEpD,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAG7C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAS,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAEvC,MAAMQ,eAAe,GAAG,MAAAA,CAAOC,OAAO,EAAEC,SAAS,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcH,OAAQ,UAAS,EAAE;QAC7DI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAU,CAAC;MACpC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACG,OAAO,IAAI,6BAA6B,CAAC;MAChE;MAEAd,QAAQ,CAAC;QAAEe,IAAI,EAAE,kBAAkB;QAAEC,OAAO,EAAE;UAAEd,OAAO;UAAEe,IAAI,EAAEN;QAAK;MAAE,CAAC,CAAC;MACxE,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAACJ,OAAO,IAAII,GAAG,CAAC;MAChE,MAAM,IAAIL,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF,CAAC;EAED,OAAO;IAAEZ;EAAgB,CAAC;AAC5B,CAAC;AAACF,EAAA,CA1BID,iBAAiB;EAAA,QACAL,gBAAgB;AAAA;AA2BvC,eAAeK,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}