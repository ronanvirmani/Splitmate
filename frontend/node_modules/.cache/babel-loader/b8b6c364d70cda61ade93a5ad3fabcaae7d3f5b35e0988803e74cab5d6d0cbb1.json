{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// import { useFetchUserGroups } from '../hooks/useFetchUserGroups';\n\n// const Dashboard = () => {\n//   const userGroups = useFetchUserGroups();\n//   const [groupItems, setGroupItems] = useState([]);\n\n//   useEffect(() => {\n//     const fetchGroupItems = async () => {\n//       const itemsPromises = userGroups.map(async (group) => {\n//         const response = await fetch(`/api/groups/${group._id}`);\n//         const groupData = await response.json();\n//         return { group: groupData, items: groupData.items };\n//       });\n\n//       const allItems = await Promise.all(itemsPromises);\n//       setGroupItems(allItems);\n//     };\n\n//     if (userGroups.length > 0) {\n//       fetchGroupItems();\n//     }\n//   }, [userGroups]);\n\n//   return (\n//     <div>\n//       {groupItems.length === 0 ? (\n//         <p>No groups found.</p>\n//       ) : (\n//         groupItems.map(({ group, items }) => (\n//           <div key={group._id}>\n//             <h2>{group.name}</h2>\n//             {items.length === 0 ? (\n//               <p>No items found in this group.</p>\n//             ) : (\n//               <ul>\n//                 {items.map((item) => (\n//                   <li key={item._id}>{item.name} - ${item.price}</li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\n// import { useFetchUserGroups } from '../hooks/useFetchUserGroups';\n\n// const Dashboard = () => {\n//   const userGroups = useFetchUserGroups();\n//   const [groupItems, setGroupItems] = useState([]);\n\n//   useEffect(() => {\n//     const fetchGroupItems = async () => {\n//       const itemsPromises = userGroups.map(async (group) => {\n//         const response = await fetch(`/api/groups/${group._id}`);\n//         const groupData = await response.json();\n//         return { group: groupData, items: groupData.items };\n//       });\n\n//       const allItems = await Promise.all(itemsPromises);\n//       setGroupItems(allItems);\n//     };\n\n//     if (userGroups.length > 0) {\n//       fetchGroupItems();\n//     }\n//   }, [userGroups]);\n\n//   return (\n//     <div>\n//       {groupItems.length === 0 ? (\n//         <p>No groups found.</p>\n//       ) : (\n//         groupItems.map(({ group, items }) => (\n//           <div key={group._id}>\n//             <h2>{group.name}</h2>\n//             {items.length === 0 ? (\n//               <p>No items found in this group.</p>\n//             ) : (\n//               <ul>\n//                 {items.map((item) => (\n//                   <li key={item._id}>{item.name} - ${item.price}</li>\n//                 ))}\n//               </ul>\n//             )}\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}