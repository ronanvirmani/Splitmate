{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useGroupsContext } from './useGroupContext';\nconst useFetchGroupItems = groupId => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGroupData = async () => {\n      try {\n        const response = await fetch(`/api/groups/${groupId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const group = await response.json();\n        if (response.ok) {\n          setItems(group.items);\n          setMembers(group.members);\n          setError(null);\n        } else {\n          console.error('Failed to fetch group data:', group);\n          setError(group.message);\n        }\n      } catch (err) {\n        console.error('Error fetching group data:', err);\n        setError('An error occurred while fetching the group data.');\n      }\n    };\n    if (groupId) {\n      fetchGroupData();\n    }\n  }, [groupId]);\n  return {\n    items,\n    members,\n    error\n  };\n};\n_s(useFetchGroupItems, \"eEx0wDL/WPg+Vfd9HtnJDDGQntU=\");\nexport default useFetchGroupItems;","map":{"version":3,"names":["useState","useEffect","useGroupsContext","useFetchGroupItems","groupId","_s","items","setItems","members","setMembers","error","setError","fetchGroupData","response","fetch","method","headers","group","json","ok","console","message","err"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchGroupItems.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useGroupsContext } from './useGroupContext';\n\nconst useFetchGroupItems = (groupId) => {\n  const [items, setItems] = useState([]);\n  const [members, setMembers] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchGroupData = async () => {\n      try {\n        const response = await fetch(`/api/groups/${groupId}`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const group = await response.json();\n\n        if (response.ok) {\n          setItems(group.items);\n          setMembers(group.members);\n          setError(null);\n        } else {\n          console.error('Failed to fetch group data:', group);\n          setError(group.message);\n        }\n      } catch (err) {\n        console.error('Error fetching group data:', err);\n        setError('An error occurred while fetching the group data.');\n      }\n    };\n\n    if (groupId) {\n      fetchGroupData();\n    }\n  }, [groupId]);\n\n  return { items, members, error };\n};\n\nexport default useFetchGroupItems;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,mBAAmB;AAEpD,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcV,OAAQ,EAAC,EAAE;UACrDW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAEnC,IAAIL,QAAQ,CAACM,EAAE,EAAE;UACfZ,QAAQ,CAACU,KAAK,CAACX,KAAK,CAAC;UACrBG,UAAU,CAACQ,KAAK,CAACT,OAAO,CAAC;UACzBG,QAAQ,CAAC,IAAI,CAAC;QAChB,CAAC,MAAM;UACLS,OAAO,CAACV,KAAK,CAAC,6BAA6B,EAAEO,KAAK,CAAC;UACnDN,QAAQ,CAACM,KAAK,CAACI,OAAO,CAAC;QACzB;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZF,OAAO,CAACV,KAAK,CAAC,4BAA4B,EAAEY,GAAG,CAAC;QAChDX,QAAQ,CAAC,kDAAkD,CAAC;MAC9D;IACF,CAAC;IAED,IAAIP,OAAO,EAAE;MACXQ,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;EAEb,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEE;EAAM,CAAC;AAClC,CAAC;AAACL,EAAA,CArCIF,kBAAkB;AAuCxB,eAAeA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}