{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password, name) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        name\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setIsLoading(false);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","_s","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","name","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\nimport { useAuthContext } from '../hooks/useAuthContext'\n\nexport const useSignup = () => {\n\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(null)\n    const { dispatch } = useAuthContext()\n\n    const signup = async (email, password, name) => {\n\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/users/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password, name })\n        })\n\n        const json = await response.json()\n\n        if (!response.ok) {\n            setError(json.error)\n            setIsLoading(false)\n        }\n        if(response.ok){\n            // save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json))\n\n            // update the auth context\n            dispatch({ type: 'LOGIN', payload: json })\n\n            setIsLoading(false)\n        }\n            \n    }\n    return { signup, isLoading, error }\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,yBAAyB;AAExD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAE5CL,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MAC9CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK;QAAEC,QAAQ;QAAEC;MAAK,CAAC;IAClD,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdhB,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;MACpBG,YAAY,CAAC,KAAK,CAAC;IACvB;IACA,IAAGM,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAZ,QAAQ,CAAC;QAAEgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;MAE1Cb,YAAY,CAAC,KAAK,CAAC;IACvB;EAEJ,CAAC;EACD,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACvC,CAAC;AAAAD,EAAA,CArCYD,SAAS;EAAA,QAIGD,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}