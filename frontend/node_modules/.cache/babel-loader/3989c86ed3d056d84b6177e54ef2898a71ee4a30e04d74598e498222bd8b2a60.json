{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupsContext';\nexport const useFetchUserGroups = () => {\n  _s();\n  // const [groups, setGroups] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupsContext();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {}\n    };\n  }, [user]);\n  useEffect(() => {\n    console.log('User object:', user);\n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n  return groups;\n};\n_s(useFetchUserGroups, \"bbbYvUiRF4zivh1QWOBdb4IpOXY=\", false, function () {\n  return [useAuthContext, useGroupsContext];\n});","map":{"version":3,"names":["useState","useEffect","useAuthContext","useGroupsContext","useFetchUserGroups","_s","user","groups","dispatch","fetchGroups","response","fetch","_id","method","headers","json","ok","console","log"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchUserGroups.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupsContext';\n\nexport const useFetchUserGroups = () => {\n  // const [groups, setGroups] = useState([]);\n  const { user } = useAuthContext();\n  const { groups, dispatch } = useGroupsContext();\n\n  useEffect(() => {\n\n    const fetchGroups = async () => {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n\n      if (response.ok){\n        \n      }\n    }\n    \n  }, [user]);\n\n\n  useEffect(() => {\n    console.log('User object:', user);\n  \n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n\n  return groups;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEK,MAAM;IAAEC;EAAS,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAE/CF,SAAS,CAAC,MAAM;IAEd,MAAMQ,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaL,IAAI,CAACM,GAAI,UAAS,EAAE;QAC7DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,EAAE,EAAC,CAEhB;IACF,CAAC;EAEH,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAGVL,SAAS,CAAC,MAAM;IACdgB,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEZ,IAAI,CAAC;IAEjC,IAAIA,IAAI,EAAE;MACRG,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,OAAOC,MAAM;AACf,CAAC;AAACF,EAAA,CAjCWD,kBAAkB;EAAA,QAEZF,cAAc,EACFC,gBAAgB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}