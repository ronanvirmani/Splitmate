{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useGroupsContext } from './useGroupContext';\nconst API_URL = \"https://splitmate-backend.onrender.com\";\nconst useRemoveUserFromGroup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const {\n    dispatch\n  } = useGroupsContext();\n  const removeUserFromGroup = async (groupId, userId) => {\n    try {\n      const response = await fetch(`${API_URL}/api/groups/${groupId}/removeUser`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId\n        })\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'REMOVE_GROUP_MEMBER',\n          payload: {\n            groupId,\n            userId\n          }\n        });\n        setError(null);\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error removing user from group:', err);\n      setError('An error occurred while removing the user from the group.');\n    }\n  };\n  return {\n    removeUserFromGroup,\n    error\n  };\n};\n_s(useRemoveUserFromGroup, \"i++mFDUT9vjLVUwyW13B3tuEbfw=\", false, function () {\n  return [useGroupsContext];\n});\nexport default useRemoveUserFromGroup;","map":{"version":3,"names":["useState","useGroupsContext","API_URL","useRemoveUserFromGroup","_s","error","setError","dispatch","removeUserFromGroup","groupId","userId","response","fetch","method","headers","body","JSON","stringify","json","ok","type","payload","message","err","console"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useRemoveUserFromGroup.js"],"sourcesContent":["import { useState } from 'react';\nimport { useGroupsContext } from './useGroupContext';\n\nconst API_URL = \"https://splitmate-backend.onrender.com\"\n\nconst useRemoveUserFromGroup = () => {\n  const [error, setError] = useState(null);\n  const { dispatch } = useGroupsContext();\n\n  const removeUserFromGroup = async (groupId, userId) => {\n    try {\n      const response = await fetch(`${API_URL}/api/groups/${groupId}/removeUser`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId })\n      });\n\n      const json = await response.json();\n\n      if (response.ok) {\n        dispatch({ type: 'REMOVE_GROUP_MEMBER', payload: { groupId, userId } });\n        setError(null);\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error removing user from group:', err);\n      setError('An error occurred while removing the user from the group.');\n    }\n  };\n\n  return { removeUserFromGroup, error };\n};\n\nexport default useRemoveUserFromGroup;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,QAAQ,mBAAmB;AAEpD,MAAMC,OAAO,GAAG,wCAAwC;AAExD,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEO;EAAS,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAEvC,MAAMO,mBAAmB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;IACrD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,eAAcO,OAAQ,aAAY,EAAE;QAC1EI,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAO,CAAC;MACjC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfZ,QAAQ,CAAC;UAAEa,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAE;YAAEZ,OAAO;YAAEC;UAAO;QAAE,CAAC,CAAC;QACvEJ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,MAAM;QACLA,QAAQ,CAACY,IAAI,CAACI,OAAO,CAAC;MACxB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACnB,KAAK,CAAC,iCAAiC,EAAEkB,GAAG,CAAC;MACrDjB,QAAQ,CAAC,2DAA2D,CAAC;IACvE;EACF,CAAC;EAED,OAAO;IAAEE,mBAAmB;IAAEH;EAAM,CAAC;AACvC,CAAC;AAACD,EAAA,CA3BID,sBAAsB;EAAA,QAELF,gBAAgB;AAAA;AA2BvC,eAAeE,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}