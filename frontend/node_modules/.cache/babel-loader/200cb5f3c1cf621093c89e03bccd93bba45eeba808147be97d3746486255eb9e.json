{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nexport const useFetchUserGroups = () => {\n  _s();\n  const [userGroups, setUserGroups] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchUserGroups = async () => {\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups`);\n        const groups = await response.json();\n        setUserGroups(groups);\n      } catch (error) {\n        console.error('Error fetching user groups:', error);\n      }\n    };\n    if (user) {\n      fetchUserGroups();\n    }\n  }, [user]);\n  return userGroups;\n};\n_s(useFetchUserGroups, \"38jDoFuyi3xSFo/wQ2l0b/xXX3E=\", false, function () {\n  return [useAuthContext];\n});\nconst fetchGroups = async () => {\n  console.log(user.groups);\n  try {\n    const response = await fetch(`/api/users/${user._id}/groups/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch groups');\n    }\n    const groupsData = await response.json();\n    setGroups(groupsData);\n  } catch (error) {\n    console.error('Error fetching groups:', error);\n  }\n};\nuseEffect(() => {\n  console.log('User object:', user);\n  if (user) {\n    fetchGroups();\n  }\n}, [user]);","map":{"version":3,"names":["useState","useEffect","useAuthContext","useFetchUserGroups","_s","userGroups","setUserGroups","user","fetchUserGroups","response","fetch","_id","groups","json","error","console","fetchGroups","log","method","headers","ok","Error","groupsData","setGroups"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchUserGroups.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nexport const useFetchUserGroups = () => {\n  const [userGroups, setUserGroups] = useState([]);\n  const { user } = useAuthContext();\n\n  useEffect(() => {\n    \n    const fetchUserGroups = async () => {\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups`);\n        const groups = await response.json();\n        setUserGroups(groups);\n      } catch (error) {\n        console.error('Error fetching user groups:', error);\n      }\n    };\n\n    if (user) {\n      fetchUserGroups();\n    }\n  }, [user]);\n\n  return userGroups;\n};\n\nconst fetchGroups = async () => {\n\n    console.log(user.groups)\n    try {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch groups');\n      }\n\n      const groupsData = await response.json();\n      setGroups(groupsData);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  };\n\n  useEffect(() => {\n    console.log('User object:', user);\n  \n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AAExD,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAAEO;EAAK,CAAC,GAAGL,cAAc,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAM;IAEd,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaH,IAAI,CAACI,GAAI,SAAQ,CAAC;QAC7D,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACpCP,aAAa,CAACM,MAAM,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED,IAAIP,IAAI,EAAE;MACRC,eAAe,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,OAAOF,UAAU;AACnB,CAAC;AAACD,EAAA,CAtBWD,kBAAkB;EAAA,QAEZD,cAAc;AAAA;AAsBjC,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;EAE5BD,OAAO,CAACE,GAAG,CAACV,IAAI,CAACK,MAAM,CAAC;EACxB,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaH,IAAI,CAACI,GAAI,UAAS,EAAE;MAC7DO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,MAAMC,UAAU,GAAG,MAAMb,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxCU,SAAS,CAACD,UAAU,CAAC;EACvB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD;AACF,CAAC;AAEDb,SAAS,CAAC,MAAM;EACdc,OAAO,CAACE,GAAG,CAAC,cAAc,EAAEV,IAAI,CAAC;EAEjC,IAAIA,IAAI,EAAE;IACRS,WAAW,CAAC,CAAC;EACf;AACF,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}