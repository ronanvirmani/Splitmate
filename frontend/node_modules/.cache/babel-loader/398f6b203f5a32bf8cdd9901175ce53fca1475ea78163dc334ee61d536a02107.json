{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupContext } from '../hooks/useGroupContext';\nexport const useFetchUserGroups = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupsContext();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_GROUPS',\n          payload: json.groups\n        });\n      }\n    };\n    fetchGroups();\n  }, [dispatch, user]);\n  return groups;\n};\n_s(useFetchUserGroups, \"v9YcRqVsrqSokhV7oNGSKCurK4Y=\", true, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useEffect","useAuthContext","useGroupContext","useFetchUserGroups","_s","user","groups","dispatch","useGroupsContext","fetchGroups","response","fetch","_id","method","headers","json","ok","type","payload"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/hooks/useFetchUserGroups.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupContext } from '../hooks/useGroupContext';\n\nexport const useFetchUserGroups = () => {\n  const { user } = useAuthContext();\n  const { groups, dispatch } = useGroupsContext();\n\n  useEffect(() => {\n\n    const fetchGroups = async () => {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const json = await response.json();\n\n      if (response.ok){\n        dispatch({ type: 'SET_GROUPS', payload: json.groups });\n      }\n    }\n\n    fetchGroups();\n    \n  }, [dispatch, user]);\n\n  return groups;\n}\n\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,eAAe,QAAQ,0BAA0B;AAE1D,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAK,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACjC,MAAM;IAAEK,MAAM;IAAEC;EAAS,CAAC,GAAGC,gBAAgB,CAAC,CAAC;EAE/CR,SAAS,CAAC,MAAM;IAEd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaN,IAAI,CAACO,GAAI,UAAS,EAAE;QAC7DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAIL,QAAQ,CAACM,EAAE,EAAC;QACdT,QAAQ,CAAC;UAAEU,IAAI,EAAE,YAAY;UAAEC,OAAO,EAAEH,IAAI,CAACT;QAAO,CAAC,CAAC;MACxD;IACF,CAAC;IAEDG,WAAW,CAAC,CAAC;EAEf,CAAC,EAAE,CAACF,QAAQ,EAAEF,IAAI,CAAC,CAAC;EAEpB,OAAOC,MAAM;AACf,CAAC;AAAAF,EAAA,CAzBYD,kBAAkB;EAAA,QACZF,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}