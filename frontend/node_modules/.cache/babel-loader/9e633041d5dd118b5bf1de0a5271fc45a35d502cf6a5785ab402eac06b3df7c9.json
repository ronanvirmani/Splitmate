{"ast":null,"code":"export const groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE_GROUP':\n      return {\n        groups: [...state.groups, action.payload]\n      };\n    case 'SET_GROUPS':\n      return {\n        groups: action.payload\n      };\n    case 'DELETE_GROUP':\n      return {\n        groups: state.groups.filter(group => group._id !== action.payload)\n      };\n    case 'ADD_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: [...group.items, action.payload.item]\n            };\n          }\n          return group;\n        })\n      };\n    case 'REMOVE_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item._id !== action.payload.itemId)\n            };\n          }\n          return group;\n        })\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["groupsReducer","state","action","type","groups","payload","filter","group","_id","map","groupId","items","item","itemId"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js"],"sourcesContent":["export const groupsReducer = (state, action) => {\n    switch(action.type){\n        case 'CREATE_GROUP':\n            return { \n                groups: [...state.groups, action.payload]\n            }\n        case 'SET_GROUPS':\n            return {\n                groups: action.payload\n            }\n        case 'DELETE_GROUP':\n            return {\n                groups: state.groups.filter(group => group._id !== action.payload)\n            }\n        case 'ADD_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: [...group.items, action.payload.item]\n                        };\n                    }\n                    return group;\n                })\n            }\n        case 'REMOVE_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: group.items.filter(item => item._id !== action.payload.itemId)\n                        };\n                    }\n                    return group;\n                })\n            }\n        default:\n            return state;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAO;QACHC,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAM,EAAEF,MAAM,CAACG,OAAO;MAC5C,CAAC;IACL,KAAK,YAAY;MACb,OAAO;QACHD,MAAM,EAAEF,MAAM,CAACG;MACnB,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACHD,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO;MACrE,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAO;QACHD,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACK,GAAG,CAACF,KAAK,IAAI;UAC9B,IAAIA,KAAK,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACK,OAAO,EAAE;YACtC,OAAO;cACH,GAAGH,KAAK;cACRI,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAK,EAAET,MAAM,CAACG,OAAO,CAACO,IAAI;YAC/C,CAAC;UACL;UACA,OAAOL,KAAK;QAChB,CAAC;MACL,CAAC;IACL,KAAK,mBAAmB;MACpB,OAAO;QACHH,MAAM,EAAEH,KAAK,CAACG,MAAM,CAACK,GAAG,CAACF,KAAK,IAAI;UAC9B,IAAIA,KAAK,CAACC,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACK,OAAO,EAAE;YACtC,OAAO;cACH,GAAGH,KAAK;cACRI,KAAK,EAAEJ,KAAK,CAACI,KAAK,CAACL,MAAM,CAACM,IAAI,IAAIA,IAAI,CAACJ,GAAG,KAAKN,MAAM,CAACG,OAAO,CAACQ,MAAM;YACxE,CAAC;UACL;UACA,OAAON,KAAK;QAChB,CAAC;MACL,CAAC;IACL;MACI,OAAON,KAAK;EACpB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}