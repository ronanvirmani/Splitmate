{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createElement as _createElement } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupContext';\nimport useFetchGroups from '../hooks/useFetchUserGroups';\nimport useCreateGroup from '../hooks/useCreateGroup';\nimport useDeleteGroup from '../hooks/useDeleteGroup';\nimport useAddItemToGroup from '../hooks/useAddItemToGroup';\nimport useRemoveItemFromGroup from '../hooks/useRemoveItemFromGroup';\nimport useFetchGroupItems from '../hooks/useFetchGroupItems';\nimport GroupDashboard from '../components/Navigator';\nimport { Container, Box, Tabs, Tab, Typography, TextField, Button, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Grid, Paper } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // const { user } = useAuthContext();\n  // const { groups } = useGroupsContext();\n\n  // const [name, setName] = useState('');\n  // const [items, setItems] = useState([]);\n  // const [selectedGroupId, setSelectedGroupId] = useState(null);\n\n  // const [newItemName, setNewItemName] = useState('');\n  // const [newItemPrice, setNewItemPrice] = useState('');\n  // const [addItemError, setAddItemError] = useState(null);\n  // const [removeItemError, setRemoveItemError] = useState(null);\n\n  // useFetchGroups();\n  // const { createGroup, error: createGroupError } = useCreateGroup();\n  // const { deleteGroup, error: deleteGroupError } = useDeleteGroup();\n  // const { addItemToGroup } = useAddItemToGroup();\n  // const { removeItemFromGroup } = useRemoveItemFromGroup();\n\n  // const { items: groupItems, members: groupMembers, error: fetchGroupItemsError } = useFetchGroupItems(selectedGroupId);\n\n  // const handleAddItem = async (groupId) => {\n  //   const result = await addItemToGroup(groupId, newItemName, newItemPrice);\n\n  //   if (result) {\n  //     setItems((prevItems) => [...prevItems, result]);\n  //     setNewItemName('');\n  //     setNewItemPrice('');\n  //     setAddItemError(null);\n  //   } else {\n  //     setAddItemError('Failed to add item');\n  //   }\n  // };\n\n  // const handleRemoveItem = async (groupId, itemId) => {\n  //   const result = await removeItemFromGroup(groupId, itemId);\n\n  //   if (result) {\n  //     setItems((prevItems) => prevItems.filter((item) => item._id !== itemId));\n  //     setRemoveItemError(null);\n  //   } else {\n  //     setRemoveItemError('Failed to remove item');\n  //   }\n  // };\n\n  const {\n    groups\n  } = useGroupsContext();\n  const {\n    user\n  } = useAuthContext();\n  const [value, setValue] = useState(0);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [newItemPrice, setNewItemPrice] = useState('');\n  const [newMemberName, setNewMemberName] = useState('');\n  const [items, setItems] = useState([]);\n  const [selectedGroupId, setSelectedGroupId] = useState(groups.length > 0 ? groups[0]._id : null);\n  useFetchGroups();\n  const {\n    createGroup,\n    error: createGroupError\n  } = useCreateGroup();\n  const {\n    deleteGroup,\n    error: deleteGroupError\n  } = useDeleteGroup();\n  const {\n    addItemToGroup\n  } = useAddItemToGroup();\n  const {\n    removeItemFromGroup\n  } = useRemoveItemFromGroup();\n  const {\n    items: groupItems,\n    members: groupMembers,\n    error: fetchGroupItemsError\n  } = useFetchGroupItems(selectedGroupId);\n  const handleAddItem = async groupId => {\n    const result = await addItemToGroup(groupId, newItemName, newItemPrice);\n    if (result) {\n      setItems(prevItems => [...prevItems, result]);\n      setNewItemName('');\n      setNewItemPrice('');\n    }\n  };\n  const handleRemoveItem = async (groupId, itemId) => {\n    const result = await removeItemFromGroup(groupId, itemId);\n    if (result) {\n      setItems(prevItems => prevItems.filter(item => item._id !== itemId));\n    }\n  };\n  const handleAddMember = groupId => {\n    // Logic to add member to group\n  };\n  const handleRemoveMember = (groupId, memberId) => {\n    // Logic to remove member from group\n  };\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setSelectedGroupId(groups[newValue]._id);\n  };\n  const handleCreateGroup = async () => {\n    const result = await createGroup(newGroupName, []);\n    if (result) {\n      setNewGroupName('');\n    }\n  };\n  function TabPanel(props) {\n    const {\n      children,\n      value,\n      index,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"tabpanel\",\n      hidden: value !== index,\n      id: `vertical-tabpanel-${index}`,\n      \"aria-labelledby\": `vertical-tab-${index}`,\n      ...other,\n      children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"div\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n  function a11yProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        my: 2\n      },\n      children: \"Group Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          borderRight: 1,\n          border: 'none',\n          minWidth: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          orientation: \"vertical\",\n          variant: \"scrollable\",\n          value: value,\n          onChange: handleChange,\n          \"aria-label\": \"Group tabs\",\n          sx: {\n            '& .MuiTab-root': {\n              fontSize: '1.1rem',\n              minHeight: 'auto',\n              justifyContent: 'flex-start',\n              width: '75%'\n            },\n            width: '75%'\n          },\n          children: groups.map((group, index) => /*#__PURE__*/_createElement(Tab, {\n            label: group.name,\n            ...a11yProps(index),\n            key: group._id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            width: '75%',\n            px: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"New Group Name\",\n            value: newGroupName,\n            onChange: e => setNewGroupName(e.target.value),\n            fullWidth: true,\n            variant: \"outlined\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleCreateGroup,\n            sx: {\n              mt: 1,\n              width: '100%'\n            },\n            children: \"Create Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        width: '100%',\n        px: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Group Name\",\n        value: newGroupName,\n        onChange: e => setNewGroupName(e.target.value),\n        fullWidth: true,\n        variant: \"outlined\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleCreateGroup,\n        sx: {\n          mt: 1,\n          width: '100%'\n        },\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: index,\n        sx: {\n          flexGrow: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                children: group.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                component: \"div\",\n                children: \"Amount you owe: $XX.XX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                children: \"Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: groupMembers && groupMembers.map(member => /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: member.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      onClick: () => handleRemoveMember(group._id, member._id),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)]\n                }, member._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                my: 2,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"New member name\",\n                  value: newMemberName,\n                  onChange: e => setNewMemberName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 34\n                  }, this),\n                  onClick: () => handleAddMember(group._id),\n                  sx: {\n                    ml: 2\n                  },\n                  children: \"Add Member\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                children: \"Items\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                children: groupItems && groupItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: `${item.name} - $${item.price}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      edge: \"end\",\n                      onClick: () => handleRemoveItem(group._id, item._id),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this)]\n                }, item._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                my: 2,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Item name\",\n                  value: newItemName,\n                  onChange: e => setNewItemName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Item price\",\n                  type: \"number\",\n                  value: newItemPrice,\n                  onChange: e => setNewItemPrice(e.target.value),\n                  sx: {\n                    ml: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 34\n                  }, this),\n                  onClick: () => handleAddItem(group._id),\n                  sx: {\n                    ml: 2\n                  },\n                  children: \"Add Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"6Yx2hGMJ6h9gAAJNXEI18xj/hvI=\", false, function () {\n  return [useGroupsContext, useAuthContext, useFetchGroups, useCreateGroup, useDeleteGroup, useAddItemToGroup, useRemoveItemFromGroup, useFetchGroupItems];\n});\n_c = Dashboard;\nexport default Dashboard;\n{/* <ul>\n        {groups && groups.length > 0 ? (\n          groups.map((group) => (\n            <li key={group._id}>\n              <div>\n                <span>{group.name}</span>\n                <button onClick={() => deleteGroup(group._id)}>Delete</button>\n                <button onClick={() => setSelectedGroupId(group._id)}>Show Items</button>\n              </div>\n              {selectedGroupId === group._id && (\n                <>\n                  <ul>\n                    {groupItems && groupItems.length > 0 &&\n                      groupItems.map((item) => (\n                        <li key={item._id}>\n                          {item.name} - ${item.price}\n                          <button onClick={() => handleRemoveItem(group._id, item._id)}>Remove</button>\n                        </li>\n                      ))}\n                  </ul>\n                  <ul>\n                    <h3>Members</h3>\n                    {groupMembers && groupMembers.length > 0 &&\n                      groupMembers.map((member) => (\n                        <li key={member._id}>{member.name}</li>\n                      ))}\n                  </ul>\n                </>\n              )}\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                handleAddItem(group._id);\n              }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Item name\"\n                  value={newItemName}\n                  onChange={(e) => setNewItemName(e.target.value)}\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Item price\"\n                  value={newItemPrice}\n                  onChange={(e) => setNewItemPrice(e.target.value)}\n                />\n                <button type=\"submit\">Add Item</button>\n              </form>\n              {addItemError && <div className=\"error\">{addItemError}</div>}\n              {removeItemError && <div className=\"error\">{removeItemError}</div>}\n              {fetchGroupItemsError && <div className=\"error\">{fetchGroupItemsError}</div>}\n            </li>\n          ))\n        ) : (\n          <li>No groups available</li>\n        )}\n      </ul>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createGroup(name, items);\n        }}\n      >\n        <label>Create new group</label>\n        <input\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n        <button type=\"submit\">Create Group</button>\n      </form>\n      {createGroupError && <div className=\"error\">{createGroupError}</div>}\n      {deleteGroupError && <div className=\"error\">{deleteGroupError}</div>} */}\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","createElement","_createElement","useAuthContext","useGroupsContext","useFetchGroups","useCreateGroup","useDeleteGroup","useAddItemToGroup","useRemoveItemFromGroup","useFetchGroupItems","GroupDashboard","Container","Box","Tabs","Tab","Typography","TextField","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Grid","Paper","DeleteIcon","AddIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","groups","user","value","setValue","newGroupName","setNewGroupName","newItemName","setNewItemName","newItemPrice","setNewItemPrice","newMemberName","setNewMemberName","items","setItems","selectedGroupId","setSelectedGroupId","length","_id","createGroup","error","createGroupError","deleteGroup","deleteGroupError","addItemToGroup","removeItemFromGroup","groupItems","members","groupMembers","fetchGroupItemsError","handleAddItem","groupId","result","prevItems","handleRemoveItem","itemId","filter","item","handleAddMember","handleRemoveMember","memberId","handleChange","event","newValue","handleCreateGroup","TabPanel","props","children","index","other","role","hidden","id","sx","p","component","fileName","_jsxFileName","lineNumber","columnNumber","a11yProps","variant","my","display","height","flexDirection","alignItems","borderRight","border","minWidth","orientation","onChange","fontSize","minHeight","justifyContent","width","map","group","label","name","key","__self","__source","mt","px","e","target","fullWidth","size","color","onClick","flexGrow","container","spacing","xs","md","member","primary","edge","startIcon","ml","price","type","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupContext';\nimport useFetchGroups from '../hooks/useFetchUserGroups';\nimport useCreateGroup from '../hooks/useCreateGroup';\nimport useDeleteGroup from '../hooks/useDeleteGroup';\nimport useAddItemToGroup from '../hooks/useAddItemToGroup';\nimport useRemoveItemFromGroup from '../hooks/useRemoveItemFromGroup';\nimport useFetchGroupItems from '../hooks/useFetchGroupItems';\nimport GroupDashboard from '../components/Navigator';\n\nimport { Container, Box, Tabs, Tab, Typography, TextField, Button, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Grid, Paper } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nconst Dashboard = () => {\n\n  // const { user } = useAuthContext();\n  // const { groups } = useGroupsContext();\n\n  // const [name, setName] = useState('');\n  // const [items, setItems] = useState([]);\n  // const [selectedGroupId, setSelectedGroupId] = useState(null);\n\n  // const [newItemName, setNewItemName] = useState('');\n  // const [newItemPrice, setNewItemPrice] = useState('');\n  // const [addItemError, setAddItemError] = useState(null);\n  // const [removeItemError, setRemoveItemError] = useState(null);\n\n  // useFetchGroups();\n  // const { createGroup, error: createGroupError } = useCreateGroup();\n  // const { deleteGroup, error: deleteGroupError } = useDeleteGroup();\n  // const { addItemToGroup } = useAddItemToGroup();\n  // const { removeItemFromGroup } = useRemoveItemFromGroup();\n\n  // const { items: groupItems, members: groupMembers, error: fetchGroupItemsError } = useFetchGroupItems(selectedGroupId);\n\n  // const handleAddItem = async (groupId) => {\n  //   const result = await addItemToGroup(groupId, newItemName, newItemPrice);\n\n  //   if (result) {\n  //     setItems((prevItems) => [...prevItems, result]);\n  //     setNewItemName('');\n  //     setNewItemPrice('');\n  //     setAddItemError(null);\n  //   } else {\n  //     setAddItemError('Failed to add item');\n  //   }\n  // };\n\n  // const handleRemoveItem = async (groupId, itemId) => {\n  //   const result = await removeItemFromGroup(groupId, itemId);\n\n  //   if (result) {\n  //     setItems((prevItems) => prevItems.filter((item) => item._id !== itemId));\n  //     setRemoveItemError(null);\n  //   } else {\n  //     setRemoveItemError('Failed to remove item');\n  //   }\n  // };\n\n  const { groups } = useGroupsContext();\n  const { user } = useAuthContext();\n  const [value, setValue] = useState(0);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [newItemName, setNewItemName] = useState('');\n  const [newItemPrice, setNewItemPrice] = useState('');\n  const [newMemberName, setNewMemberName] = useState('');\n  const [items, setItems] = useState([]);\n  const [selectedGroupId, setSelectedGroupId] = useState(groups.length > 0 ? groups[0]._id : null);\n\n  useFetchGroups();\n  const { createGroup, error: createGroupError } = useCreateGroup();\n  const { deleteGroup, error: deleteGroupError } = useDeleteGroup();\n  const { addItemToGroup } = useAddItemToGroup();\n  const { removeItemFromGroup } = useRemoveItemFromGroup();\n\n  const { items: groupItems, members: groupMembers, error: fetchGroupItemsError } = useFetchGroupItems(selectedGroupId);\n\n  const handleAddItem = async (groupId) => {\n    const result = await addItemToGroup(groupId, newItemName, newItemPrice);\n\n    if (result) {\n      setItems((prevItems) => [...prevItems, result]);\n      setNewItemName('');\n      setNewItemPrice('');\n    }\n  };\n\n  const handleRemoveItem = async (groupId, itemId) => {\n    const result = await removeItemFromGroup(groupId, itemId);\n\n    if (result) {\n      setItems((prevItems) => prevItems.filter((item) => item._id !== itemId));\n    }\n  };\n\n  const handleAddMember = (groupId) => {\n    // Logic to add member to group\n  };\n\n  const handleRemoveMember = (groupId, memberId) => {\n    // Logic to remove member from group\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setSelectedGroupId(groups[newValue]._id);\n  };\n\n  const handleCreateGroup = async () => {\n    const result = await createGroup(newGroupName, []);\n    if (result) {\n      setNewGroupName('');\n    }\n  };\n\n  function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography component=\"div\">{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  \n  function a11yProps(index) {\n    return {\n      id: `vertical-tab-${index}`,\n      'aria-controls': `vertical-tabpanel-${index}`,\n    };\n  }\n\n  return (\n    <>\n      <Typography variant=\"h4\" sx={{ my: 2 }}>Group Dashboard</Typography>\n      <Box sx={{ display: 'flex', height: '100%' }}>\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', borderRight: 1, border:'none', minWidth: 100 }}>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Group tabs\"\n            sx={{ \n              '& .MuiTab-root': { \n                fontSize: '1.1rem',\n                minHeight: 'auto',\n                justifyContent: 'flex-start',\n                width: '75%',\n              },\n              width: '75%',\n            }}\n          >\n            {groups.map((group, index) => (\n              <Tab label={group.name} {...a11yProps(index)} key={group._id} />\n            ))}\n          </Tabs>\n          <Box sx={{ mt: 2, width: '75%', px: 1 }}>\n            <TextField\n              label=\"New Group Name\"\n              value={newGroupName}\n              onChange={(e) => setNewGroupName(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleCreateGroup}\n              sx={{ mt: 1, width: '100%' }}\n            >\n              Create Group\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n      <Box sx={{ mt: 2, width: '100%', px: 1 }}>\n            <TextField\n              label=\"New Group Name\"\n              value={newGroupName}\n              onChange={(e) => setNewGroupName(e.target.value)}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleCreateGroup}\n              sx={{ mt: 1, width: '100%' }}\n            >\n              Create Group\n            </Button>\n          </Box>\n        <Box>\n        {groups.map((group, index) => (\n          <TabPanel value={value} index={index} key={group._id} sx={{ flexGrow: 1 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" component=\"div\">{group.name}</Typography>\n                  <Typography variant=\"subtitle1\" component=\"div\">Amount you owe: $XX.XX</Typography>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" component=\"div\">Members</Typography>\n                  <List>\n                    {groupMembers && groupMembers.map((member) => (\n                      <ListItem key={member._id}>\n                        <ListItemText primary={member.name} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" onClick={() => handleRemoveMember(group._id, member._id)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                  <Box display=\"flex\" alignItems=\"center\" my={2}>\n                    <TextField\n                      label=\"New member name\"\n                      value={newMemberName}\n                      onChange={(e) => setNewMemberName(e.target.value)}\n                    />\n                    <Button\n                      startIcon={<AddIcon />}\n                      onClick={() => handleAddMember(group._id)}\n                      sx={{ ml: 2 }}\n                    >\n                      Add Member\n                    </Button>\n                  </Box>\n                </Paper>\n              </Grid>\n\n              <Grid item xs={12} md={6}>\n                <Paper sx={{ p: 2 }}>\n                  <Typography variant=\"h6\" component=\"div\">Items</Typography>\n                  <List>\n                    {groupItems && groupItems.map((item) => (\n                      <ListItem key={item._id}>\n                        <ListItemText primary={`${item.name} - $${item.price}`} />\n                        <ListItemSecondaryAction>\n                          <IconButton edge=\"end\" onClick={() => handleRemoveItem(group._id, item._id)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                  <Box display=\"flex\" alignItems=\"center\" my={2}>\n                    <TextField\n                      label=\"Item name\"\n                      value={newItemName}\n                      onChange={(e) => setNewItemName(e.target.value)}\n                    />\n                    <TextField\n                      label=\"Item price\"\n                      type=\"number\"\n                      value={newItemPrice}\n                      onChange={(e) => setNewItemPrice(e.target.value)}\n                      sx={{ ml: 2 }}\n                    />\n                    <Button\n                      startIcon={<AddIcon />}\n                      onClick={() => handleAddItem(group._id)}\n                      sx={{ ml: 2 }}\n                    >\n                      Add Item\n                    </Button>\n                  </Box>\n                </Paper>\n              </Grid>\n            </Grid>\n          </TabPanel>\n        ))}\n      </Box>\n    </>\n      \n  );\n};\n\nexport default Dashboard;\n\n{/* <ul>\n        {groups && groups.length > 0 ? (\n          groups.map((group) => (\n            <li key={group._id}>\n              <div>\n                <span>{group.name}</span>\n                <button onClick={() => deleteGroup(group._id)}>Delete</button>\n                <button onClick={() => setSelectedGroupId(group._id)}>Show Items</button>\n              </div>\n              {selectedGroupId === group._id && (\n                <>\n                  <ul>\n                    {groupItems && groupItems.length > 0 &&\n                      groupItems.map((item) => (\n                        <li key={item._id}>\n                          {item.name} - ${item.price}\n                          <button onClick={() => handleRemoveItem(group._id, item._id)}>Remove</button>\n                        </li>\n                      ))}\n                  </ul>\n                  <ul>\n                    <h3>Members</h3>\n                    {groupMembers && groupMembers.length > 0 &&\n                      groupMembers.map((member) => (\n                        <li key={member._id}>{member.name}</li>\n                      ))}\n                  </ul>\n                </>\n              )}\n              <form onSubmit={(e) => {\n                e.preventDefault();\n                handleAddItem(group._id);\n              }}>\n                <input\n                  type=\"text\"\n                  placeholder=\"Item name\"\n                  value={newItemName}\n                  onChange={(e) => setNewItemName(e.target.value)}\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Item price\"\n                  value={newItemPrice}\n                  onChange={(e) => setNewItemPrice(e.target.value)}\n                />\n                <button type=\"submit\">Add Item</button>\n              </form>\n              {addItemError && <div className=\"error\">{addItemError}</div>}\n              {removeItemError && <div className=\"error\">{removeItemError}</div>}\n              {fetchGroupItemsError && <div className=\"error\">{fetchGroupItemsError}</div>}\n            </li>\n          ))\n        ) : (\n          <li>No groups available</li>\n        )}\n      </ul>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          createGroup(name, items);\n        }}\n      >\n        <label>Create new group</label>\n        <input\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n        <button type=\"submit\">Create Group</button>\n      </form>\n      {createGroupError && <div className=\"error\">{createGroupError}</div>}\n      {deleteGroupError && <div className=\"error\">{deleteGroupError}</div>} */}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}