{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GroupsContext = /*#__PURE__*/createContext();\nexport const groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE_GROUP':\n      return {\n        groups: [...state.groups, action.payload]\n      };\n    case 'SET_GROUPS':\n      return {\n        groups: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default GroupsContextProvider = _s(({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(groupsReducer, {\n    groups: []\n  });\n  return /*#__PURE__*/_jsxDEV(GroupContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}, \"xZcTVOXHBzaLZCBzkTdgA68wblo=\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","GroupsContext","groupsReducer","state","action","type","groups","payload","GroupsContextProvider","_s","children","dispatch","GroupContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react'\n\nexport const GroupsContext = createContext()\n\nexport const groupsReducer = (state, action) => {\n    switch(action.type){\n        case 'CREATE_GROUP':\n            return { \n                groups: [...state.groups, action.payload]\n            }\n        case 'SET_GROUPS':\n            return {\n                groups: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default GroupsContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(groupsReducer, {\n        groups: []\n    })\n\n    return (\n        <GroupContext.Provider value={{ ...state, dispatch }}>\n            { children }\n        </GroupContext.Provider>\n    )\n}\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMK,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,cAAc;MACf,OAAO;QACHC,MAAM,EAAE,CAAC,GAAGH,KAAK,CAACG,MAAM,EAAEF,MAAM,CAACG,OAAO;MAC5C,CAAC;IACL,KAAK,YAAY;MACb,OAAO;QACHD,MAAM,EAAEF,MAAM,CAACG;MACnB,CAAC;IACL;MACI,OAAOJ,KAAK;EACpB;AACJ,CAAC;AAED,eAAeK,qBAAqB,GAAAC,EAAA,CAAG,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAD,EAAA;EACrD,MAAM,CAACN,KAAK,EAAEQ,QAAQ,CAAC,GAAGb,UAAU,CAACI,aAAa,EAAE;IAChDI,MAAM,EAAE;EACZ,CAAC,CAAC;EAEF,oBACIN,OAAA,CAACY,YAAY,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGX,KAAK;MAAEQ;IAAS,CAAE;IAAAD,QAAA,EAC/CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEhC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}