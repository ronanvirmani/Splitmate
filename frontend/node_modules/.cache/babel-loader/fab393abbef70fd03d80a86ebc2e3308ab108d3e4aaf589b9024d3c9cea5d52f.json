{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GroupsContext = /*#__PURE__*/createContext();\nexport const groupsReducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE_GROUP':\n      return {\n        groups: [...state.groups, action.payload]\n      };\n    case 'SET_GROUPS':\n      return {\n        groups: action.payload\n      };\n    case 'DELETE_GROUP':\n      return {\n        groups: state.groups.filter(group => group._id !== action.payload)\n      };\n    case 'ADD_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: [...group.items, action.payload.item]\n            };\n          }\n          return group;\n        })\n      };\n    case 'REMOVE_GROUP_ITEM':\n      return {\n        groups: state.groups.map(group => {\n          if (group._id === action.payload.groupId) {\n            return {\n              ...group,\n              items: group.items.filter(item => item._id !== action.payload.itemId)\n            };\n          }\n          return group;\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport const GroupsContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(groupsReducer, {\n    groups: []\n  });\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    const fetchGroups = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const json = await response.json();\n          dispatch({\n            type: 'SET_GROUPS',\n            payload: json\n          });\n        } else {\n          console.error('Failed to fetch groups:', response.statusText);\n        }\n      } catch (err) {\n        console.error('Error fetching groups:', err);\n      }\n    };\n    fetchGroups();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(GroupsContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupsContextProvider, \"LUbSnt3dxnzjeCATTnriPMgX7tU=\", false, function () {\n  return [useAuthContext];\n});\n_c = GroupsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GroupsContextProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","useAuthContext","jsxDEV","_jsxDEV","GroupsContext","groupsReducer","state","action","type","groups","payload","filter","group","_id","map","groupId","items","item","itemId","GroupsContextProvider","children","_s","dispatch","user","fetchGroups","response","fetch","method","headers","ok","json","console","error","statusText","err","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/context/GroupContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nexport const GroupsContext = createContext();\n\nexport const groupsReducer = (state, action) => {\n    switch(action.type) {\n        case 'CREATE_GROUP':\n            return { \n                groups: [...state.groups, action.payload]\n            };\n        case 'SET_GROUPS':\n            return {\n                groups: action.payload\n            };\n        case 'DELETE_GROUP':\n            return {\n                groups: state.groups.filter(group => group._id !== action.payload)\n            };\n        case 'ADD_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: [...group.items, action.payload.item]\n                        };\n                    }\n                    return group;\n                })\n            };\n        case 'REMOVE_GROUP_ITEM':\n            return {\n                groups: state.groups.map(group => {\n                    if (group._id === action.payload.groupId) {\n                        return {\n                            ...group,\n                            items: group.items.filter(item => item._id !== action.payload.itemId)\n                        };\n                    }\n                    return group;\n                })\n            };\n        default:\n            return state;\n    }\n};\n\nexport const GroupsContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(groupsReducer, { groups: [] });\n    const { user } = useAuthContext();\n\n    useEffect(() => {\n        const fetchGroups = async () => {\n            if (!user) return;\n\n            try {\n                const response = await fetch(`/api/users/${user._id}/groups/`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n\n                if (response.ok) {\n                    const json = await response.json();\n                    dispatch({ type: 'SET_GROUPS', payload: json });\n                } else {\n                    console.error('Failed to fetch groups:', response.statusText);\n                }\n            } catch (err) {\n                console.error('Error fetching groups:', err);\n            }\n        };\n\n        fetchGroups();\n    }, [user]);\n\n    return (\n        <GroupsContext.Provider value={{ state, dispatch }}>\n            { children }\n        </GroupsContext.Provider>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}