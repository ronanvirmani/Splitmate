{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  useEffect(() => {\n    console.log('User object:', user.email);\n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n  const fetchGroups = async () => {\n    console.log(user._id);\n    try {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch groups');\n      }\n      const groupsData = await response.json();\n      setGroups(groupsData);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"z0EVfcLjlBEfR82Yf33bCdIHIds=\", false, function () {\n  return [useAuthContext];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","jsxDEV","_jsxDEV","Dashboard","_s","groups","setGroups","user","console","log","email","fetchGroups","_id","response","fetch","method","headers","ok","Error","groupsData","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","name","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nconst Dashboard = () => {\n  const [groups, setGroups] = useState([]);\n  const { user } = useAuthContext();\n\n  useEffect(() => {\n    console.log('User object:', user.email);\n  \n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n\n  const fetchGroups = async () => {\n\n    console.log(user._id)\n    try {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch groups');\n      }\n\n      const groupsData = await response.json();\n      setGroups(groupsData);\n    } catch (error) {\n      console.error('Error fetching groups:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <h2>Groups</h2>\n      {user && <p>User ID: {user._id}</p>}\n      <ul>\n        {groups.map((group) => (\n          <li key={group._id}>{group.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEQ;EAAK,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACdU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,IAAI,CAACG,KAAK,CAAC;IAEvC,IAAIH,IAAI,EAAE;MACRI,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9BH,OAAO,CAACC,GAAG,CAACF,IAAI,CAACK,GAAG,CAAC;IACrB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaP,IAAI,CAACK,GAAI,UAAS,EAAE;QAC7DG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMC,UAAU,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACxCd,SAAS,CAACa,UAAU,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAAoB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdnB,IAAI,iBAAIL,OAAA;MAAAoB,QAAA,GAAG,WAAS,EAACf,IAAI,CAACK,GAAG;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCxB,OAAA;MAAAoB,QAAA,EACGjB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB1B,OAAA;QAAAoB,QAAA,EAAqBM,KAAK,CAACC;MAAI,GAAtBD,KAAK,CAAChB,GAAG;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9CID,SAAS;EAAA,QAEIH,cAAc;AAAA;AAAA8B,EAAA,GAF3B3B,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}