{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useFetchUserGroups } from '../hooks/useFetchUserGroups';\nimport { useGroupsContext } from '../hooks/useGroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupsContext();\n\n  // Custom hook to fetch user groups\n  useFetchUserGroups();\n  const addGroup = async newGroup => {\n    try {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newGroup)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add group');\n      }\n      const addedGroup = await response.json();\n      dispatch({\n        type: 'CREATE_GROUP',\n        payload: addedGroup\n      });\n    } catch (error) {\n      console.error('Error adding group:', error);\n    }\n  };\n  console.log(user.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups && groups.length > 0 ? groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No groups available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addGroup({\n        name: 'New Group'\n      }),\n      children: \"Add Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NYTXx3xLpY9IY17pP8BuXK4qpSs=\", false, function () {\n  return [useAuthContext, useGroupsContext, useFetchUserGroups];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useAuthContext","useFetchUserGroups","useGroupsContext","jsxDEV","_jsxDEV","Dashboard","_s","user","groups","dispatch","addGroup","newGroup","response","fetch","_id","method","headers","body","JSON","stringify","ok","Error","addedGroup","json","type","payload","error","console","log","name","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","group","onClick","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useFetchUserGroups } from '../hooks/useFetchUserGroups';\nimport { useGroupsContext } from '../hooks/useGroupContext';\n\nconst Dashboard = () => {\n  const { user } = useAuthContext();\n  const { groups, dispatch } = useGroupsContext();\n\n  // Custom hook to fetch user groups\n  useFetchUserGroups();\n\n  const addGroup = async (newGroup) => {\n    try {\n      const response = await fetch(`/api/users/${user._id}/groups/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newGroup)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add group');\n      }\n\n      const addedGroup = await response.json();\n      dispatch({ type: 'CREATE_GROUP', payload: addedGroup });\n    } catch (error) {\n      console.error('Error adding group:', error);\n    }\n  };\n\n  console.log(user.name)\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <h2>Groups</h2>\n      {user && <p>User ID: {user._id}</p>}\n      <ul>\n        {groups && groups.length > 0 ? (\n          groups.map((group) => (\n            <li key={group._id}>{group.name}</li>\n          ))\n        ) : (\n          <li>No groups available</li>\n        )}\n      </ul>\n      <button onClick={() => addGroup({ name: 'New Group' })}>Add Group</button>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}