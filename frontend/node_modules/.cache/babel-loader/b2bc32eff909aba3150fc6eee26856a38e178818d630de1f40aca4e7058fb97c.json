{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const {\n    user\n  } = useAuthContext();\n  useEffect;\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch groups');\n        }\n        const groupsData = await response.json();\n        setGroups(groupsData);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n      }\n    };\n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"z0EVfcLjlBEfR82Yf33bCdIHIds=\", false, function () {\n  return [useAuthContext];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","useAuthContext","jsxDEV","_jsxDEV","Dashboard","_s","groups","setGroups","user","fetchGroups","response","fetch","_id","method","headers","ok","Error","groupsData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","group","name","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\n\nconst Dashboard = () => {\n  const [groups, setGroups] = useState([]);\n  const { user } = useAuthContext();\n\n  useEffect\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch groups');\n        }\n\n        const groupsData = await response.json();\n        setGroups(groupsData);\n      } catch (error) {\n        console.error('Error fetching groups:', error);\n      }\n    };\n\n    if (user) {\n      fetchGroups();\n    }\n  }, [user]);\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <h2>Groups</h2>\n      <ul>\n        {groups.map((group) => (\n          <li key={group._id}>{group.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEQ;EAAK,CAAC,GAAGP,cAAc,CAAC,CAAC;EAEjCF,SAAS;EAETA,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaH,IAAI,CAACI,GAAI,UAAS,EAAE;UAC7DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;QAEA,MAAMC,UAAU,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACxCX,SAAS,CAACU,UAAU,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,IAAIX,IAAI,EAAE;MACRC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAAkB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACftB,OAAA;MAAAkB,QAAA,EACGf,MAAM,CAACoB,GAAG,CAAEC,KAAK,iBAChBxB,OAAA;QAAAkB,QAAA,EAAqBM,KAAK,CAACC;MAAI,GAAtBD,KAAK,CAACf,GAAG;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CID,SAAS;EAAA,QAEIH,cAAc;AAAA;AAAA4B,EAAA,GAF3BzB,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}