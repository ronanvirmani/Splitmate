{"ast":null,"code":"var _jsxFileName = \"/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    groups,\n    dispatch\n  } = useGroupsContext();\n  const [name, setName] = useState('');\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGroups = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const json = await response.json();\n        if (response.ok) {\n          dispatch({\n            type: 'SET_GROUPS',\n            payload: json\n          });\n        } else {\n          console.error('Failed to fetch groups:', json);\n        }\n      } catch (err) {\n        console.error('Error fetching groups:', err);\n      }\n    };\n    fetchGroups();\n  }, [user, dispatch]);\n  const createGroup = async e => {\n    e.preventDefault();\n    if (!name) {\n      setError('Group name is required');\n      return;\n    }\n    const group = {\n      name,\n      items\n    };\n    try {\n      const response = await fetch(`/api/groups/${user._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(group)\n      });\n      const json = await response.json();\n      if (response.ok) {\n        setName('');\n        setItems([]);\n        console.log('New group created:', json);\n        dispatch({\n          type: 'CREATE_GROUP',\n          payload: json\n        });\n        setError(null);\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error creating group:', err);\n      setError('An error occurred while creating the group.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", user._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groups && groups.length > 0 ? groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: group.name\n      }, group._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No groups available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Create new group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NQD8iTPMv6CITK33eQPnVwkjVK4=\", false, function () {\n  return [useAuthContext, useGroupsContext];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useAuthContext","useGroupsContext","jsxDEV","_jsxDEV","Dashboard","_s","user","groups","dispatch","name","setName","items","setItems","error","setError","fetchGroups","response","fetch","_id","method","headers","json","ok","type","payload","console","err","createGroup","e","preventDefault","group","body","JSON","stringify","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onSubmit","onChange","target","value","className","_c","$RefreshReg$"],"sources":["/Users/ronan.virmani/VSCode/mern-project/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport { useGroupsContext } from '../hooks/useGroupContext';\n\nconst Dashboard = () => {\n  const { user } = useAuthContext();\n  const { groups, dispatch } = useGroupsContext();\n\n  const [name, setName] = useState('');\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchGroups = async () => {\n      if (!user) return;\n\n      try {\n        const response = await fetch(`/api/users/${user._id}/groups/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const json = await response.json();\n\n        if (response.ok) {\n          dispatch({ type: 'SET_GROUPS', payload: json });\n        } else {\n          console.error('Failed to fetch groups:', json);\n        }\n      } catch (err) {\n        console.error('Error fetching groups:', err);\n      }\n    };\n\n    fetchGroups();\n  }, [user, dispatch]);\n\n  const createGroup = async (e) => {\n    e.preventDefault();\n\n    if (!name) {\n      setError('Group name is required');\n      return;\n    }\n\n    const group = {\n      name,\n      items\n    };\n\n    try {\n      const response = await fetch(`/api/groups/${user._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(group)\n      });\n\n      const json = await response.json();\n\n      if (response.ok) {\n        setName('');\n        setItems([]);\n        console.log('New group created:', json);\n        dispatch({ type: 'CREATE_GROUP', payload: json });\n        setError(null);\n      } else {\n        setError(json.message);\n      }\n    } catch (err) {\n      console.error('Error creating group:', err);\n      setError('An error occurred while creating the group.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      <h2>Groups</h2>\n      {user && <p>User ID: {user._id}</p>}\n      <ul>\n        {groups && groups.length > 0 ? (\n          groups.map((group) => (\n            <li key={group._id}>{group.name}</li>\n          ))\n        ) : (\n          <li>No groups available</li>\n        )}\n      </ul>\n      <form onSubmit={createGroup}>\n        <label>\n          Create new group\n        </label>\n        <input\n          type=\"text\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n        <button type=\"submit\">Create Group</button>\n      </form>\n      {error && <div className=\"error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}